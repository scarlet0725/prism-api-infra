name: Terraform Apply

on:
  pull_request:
    branches:
      - master
    types: 
      - closed

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDCRole

      - name: configure GCP credentials
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/489282523838/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider'
          service_account: 'github-actions@prism-prod-372103.iam.gserviceaccount.com'

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        shell: bash
        run: terraform init

      - name: Terraform Apply
        id: apply
        shell: bash
        continue-on-error: true
        run: terraform apply -input=false --auto-approve
      
      - uses: actions/github-script@0.9.0
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`${process.env.APPLY}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Check on failures
        if: steps.apply.outcome == 'failure'
        run: exit 1